@using shop.eventsourcing
@using shop.shared
@inject IQueryService<Fruit> FruitQueryService

<MudDialog>
    <TitleContent>Deposit fruit</TitleContent>
    <DialogContent>
        <MudSelect @bind-Value="selectedFruit" T="Fruit" Label="Fruit" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter">
            @foreach (var item in FruitQueryService.Get().Where(f => f.State != State.Deleted))
            {
                <MudSelectItem Value="@item">@item.Name: @item.Holdings</MudSelectItem>
            }
        </MudSelect>
        <MudSlider @bind-Value="selectedAmount" Min="20" Max="80" Color="Color.Info">Value: @selectedAmount.ToString()</MudSlider>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    private Fruit? selectedFruit;
    private int selectedAmount;

    void Submit()
    {
        // Validate the input if needed
        if (selectedFruit == null || selectedAmount <= 0)
        {
            // You can show an error message or prevent submission
            return;
        }

        var e = new DepositFruitEvent(selectedFruit.Id, selectedAmount);

        // Close the dialog
        MudDialog.Close(DialogResult.Ok(e));
    }

    void Cancel() => MudDialog.Cancel();

}